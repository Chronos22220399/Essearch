// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: search.proto
// Protobuf C++ Version: 5.29.2

#include "search.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr SearchResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : docids_{},
        _docids_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SearchResponse::SearchResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SearchResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SearchResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SearchResponseDefaultTypeInternal() {}
  union {
    SearchResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SearchResponseDefaultTypeInternal _SearchResponse_default_instance_;

inline constexpr SearchRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mode_{static_cast< ::SearchMode >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SearchRequest::SearchRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SearchRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SearchRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SearchRequestDefaultTypeInternal() {}
  union {
    SearchRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SearchRequestDefaultTypeInternal _SearchRequest_default_instance_;

inline constexpr GetNewsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : news_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetNewsResponse::GetNewsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetNewsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetNewsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetNewsResponseDefaultTypeInternal() {}
  union {
    GetNewsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetNewsResponseDefaultTypeInternal _GetNewsResponse_default_instance_;

inline constexpr GetNewsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : docids_{},
        _docids_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetNewsRequest::GetNewsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetNewsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetNewsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetNewsRequestDefaultTypeInternal() {}
  union {
    GetNewsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetNewsRequestDefaultTypeInternal _GetNewsRequest_default_instance_;
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_search_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_search_2eproto = nullptr;
const ::uint32_t
    TableStruct_search_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::SearchRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SearchRequest, _impl_.mode_),
        PROTOBUF_FIELD_OFFSET(::SearchRequest, _impl_.content_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::SearchResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SearchResponse, _impl_.docids_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::GetNewsRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::GetNewsRequest, _impl_.docids_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::GetNewsResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::GetNewsResponse, _impl_.news_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::SearchRequest)},
        {10, -1, -1, sizeof(::SearchResponse)},
        {19, -1, -1, sizeof(::GetNewsRequest)},
        {28, -1, -1, sizeof(::GetNewsResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_SearchRequest_default_instance_._instance,
    &::_SearchResponse_default_instance_._instance,
    &::_GetNewsRequest_default_instance_._instance,
    &::_GetNewsResponse_default_instance_._instance,
};
const char descriptor_table_protodef_search_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014search.proto\";\n\rSearchRequest\022\031\n\004mode\030"
    "\001 \001(\0162\013.SearchMode\022\017\n\007content\030\002 \001(\t\" \n\016S"
    "earchResponse\022\016\n\006docIds\030\001 \003(\005\" \n\016GetNews"
    "Request\022\016\n\006docIds\030\001 \003(\005\"\037\n\017GetNewsRespon"
    "se\022\014\n\004news\030\001 \003(\t*&\n\nSearchMode\022\n\n\006Normal"
    "\020\000\022\014\n\010Advanced\020\0012l\n\rSearchService\022)\n\006Sea"
    "rch\022\016.SearchRequest\032\017.SearchResponse\0220\n\007"
    "GetNews\022\017.GetNewsRequest\032\020.GetNewsRespon"
    "se(\0010\001b\006proto3"
};
static ::absl::once_flag descriptor_table_search_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_search_2eproto = {
    false,
    false,
    334,
    descriptor_table_protodef_search_2eproto,
    "search.proto",
    &descriptor_table_search_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_search_2eproto::offsets,
    file_level_enum_descriptors_search_2eproto,
    file_level_service_descriptors_search_2eproto,
};
const ::google::protobuf::EnumDescriptor* SearchMode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_search_2eproto);
  return file_level_enum_descriptors_search_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t SearchMode_internal_data_[] = {
    131072u, 0u, };
bool SearchMode_IsValid(int value) {
  return 0 <= value && value <= 1;
}
// ===================================================================

class SearchRequest::_Internal {
 public:
};

SearchRequest::SearchRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SearchRequest)
}
inline PROTOBUF_NDEBUG_INLINE SearchRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::SearchRequest& from_msg)
      : content_(arena, from.content_),
        _cached_size_{0} {}

SearchRequest::SearchRequest(
    ::google::protobuf::Arena* arena,
    const SearchRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SearchRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.mode_ = from._impl_.mode_;

  // @@protoc_insertion_point(copy_constructor:SearchRequest)
}
inline PROTOBUF_NDEBUG_INLINE SearchRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : content_(arena),
        _cached_size_{0} {}

inline void SearchRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.mode_ = {};
}
SearchRequest::~SearchRequest() {
  // @@protoc_insertion_point(destructor:SearchRequest)
  SharedDtor(*this);
}
inline void SearchRequest::SharedDtor(MessageLite& self) {
  SearchRequest& this_ = static_cast<SearchRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.content_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SearchRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SearchRequest(arena);
}
constexpr auto SearchRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SearchRequest),
                                            alignof(SearchRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SearchRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SearchRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SearchRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SearchRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SearchRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SearchRequest>(), &SearchRequest::ByteSizeLong,
            &SearchRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_._cached_size_),
        false,
    },
    &SearchRequest::kDescriptorMethods,
    &descriptor_table_search_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SearchRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 29, 2> SearchRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SearchRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string content = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.content_)}},
    // .SearchMode mode = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SearchRequest, _impl_.mode_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.mode_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .SearchMode mode = 1;
    {PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string content = 2;
    {PROTOBUF_FIELD_OFFSET(SearchRequest, _impl_.content_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\15\0\7\0\0\0\0\0"
    "SearchRequest"
    "content"
  }},
};

PROTOBUF_NOINLINE void SearchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SearchRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.content_.ClearToEmpty();
  _impl_.mode_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SearchRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SearchRequest& this_ = static_cast<const SearchRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SearchRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SearchRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:SearchRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .SearchMode mode = 1;
          if (this_._internal_mode() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_mode(), target);
          }

          // string content = 2;
          if (!this_._internal_content().empty()) {
            const std::string& _s = this_._internal_content();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SearchRequest.content");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:SearchRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SearchRequest::ByteSizeLong(const MessageLite& base) {
          const SearchRequest& this_ = static_cast<const SearchRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SearchRequest::ByteSizeLong() const {
          const SearchRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:SearchRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string content = 2;
            if (!this_._internal_content().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_content());
            }
            // .SearchMode mode = 1;
            if (this_._internal_mode() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_mode());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SearchRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SearchRequest*>(&to_msg);
  auto& from = static_cast<const SearchRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SearchRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if (from._internal_mode() != 0) {
    _this->_impl_.mode_ = from._impl_.mode_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SearchRequest::CopyFrom(const SearchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SearchRequest::InternalSwap(SearchRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, &other->_impl_.content_, arena);
  swap(_impl_.mode_, other->_impl_.mode_);
}

::google::protobuf::Metadata SearchRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SearchResponse::_Internal {
 public:
};

SearchResponse::SearchResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SearchResponse)
}
inline PROTOBUF_NDEBUG_INLINE SearchResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::SearchResponse& from_msg)
      : docids_{visibility, arena, from.docids_},
        _docids_cached_byte_size_{0},
        _cached_size_{0} {}

SearchResponse::SearchResponse(
    ::google::protobuf::Arena* arena,
    const SearchResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SearchResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:SearchResponse)
}
inline PROTOBUF_NDEBUG_INLINE SearchResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : docids_{visibility, arena},
        _docids_cached_byte_size_{0},
        _cached_size_{0} {}

inline void SearchResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SearchResponse::~SearchResponse() {
  // @@protoc_insertion_point(destructor:SearchResponse)
  SharedDtor(*this);
}
inline void SearchResponse::SharedDtor(MessageLite& self) {
  SearchResponse& this_ = static_cast<SearchResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SearchResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SearchResponse(arena);
}
constexpr auto SearchResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SearchResponse, _impl_.docids_) +
          decltype(SearchResponse::_impl_.docids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SearchResponse), alignof(SearchResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SearchResponse::PlacementNew_,
                                 sizeof(SearchResponse),
                                 alignof(SearchResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SearchResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SearchResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SearchResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SearchResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SearchResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SearchResponse>(), &SearchResponse::ByteSizeLong,
            &SearchResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SearchResponse, _impl_._cached_size_),
        false,
    },
    &SearchResponse::kDescriptorMethods,
    &descriptor_table_search_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SearchResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SearchResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SearchResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated int32 docIds = 1;
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SearchResponse, _impl_.docids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int32 docIds = 1;
    {PROTOBUF_FIELD_OFFSET(SearchResponse, _impl_.docids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SearchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:SearchResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.docids_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SearchResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SearchResponse& this_ = static_cast<const SearchResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SearchResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SearchResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:SearchResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated int32 docIds = 1;
          {
            int byte_size = this_._impl_._docids_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt32Packed(
                  1, this_._internal_docids(), byte_size, target);
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:SearchResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SearchResponse::ByteSizeLong(const MessageLite& base) {
          const SearchResponse& this_ = static_cast<const SearchResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SearchResponse::ByteSizeLong() const {
          const SearchResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:SearchResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated int32 docIds = 1;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
                      this_._internal_docids(), 1,
                      this_._impl_._docids_cached_byte_size_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SearchResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SearchResponse*>(&to_msg);
  auto& from = static_cast<const SearchResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SearchResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_docids()->MergeFrom(from._internal_docids());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SearchResponse::CopyFrom(const SearchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SearchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SearchResponse::InternalSwap(SearchResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.docids_.InternalSwap(&other->_impl_.docids_);
}

::google::protobuf::Metadata SearchResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetNewsRequest::_Internal {
 public:
};

GetNewsRequest::GetNewsRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GetNewsRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetNewsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::GetNewsRequest& from_msg)
      : docids_{visibility, arena, from.docids_},
        _docids_cached_byte_size_{0},
        _cached_size_{0} {}

GetNewsRequest::GetNewsRequest(
    ::google::protobuf::Arena* arena,
    const GetNewsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetNewsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:GetNewsRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetNewsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : docids_{visibility, arena},
        _docids_cached_byte_size_{0},
        _cached_size_{0} {}

inline void GetNewsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetNewsRequest::~GetNewsRequest() {
  // @@protoc_insertion_point(destructor:GetNewsRequest)
  SharedDtor(*this);
}
inline void GetNewsRequest::SharedDtor(MessageLite& self) {
  GetNewsRequest& this_ = static_cast<GetNewsRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GetNewsRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetNewsRequest(arena);
}
constexpr auto GetNewsRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetNewsRequest, _impl_.docids_) +
          decltype(GetNewsRequest::_impl_.docids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetNewsRequest), alignof(GetNewsRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetNewsRequest::PlacementNew_,
                                 sizeof(GetNewsRequest),
                                 alignof(GetNewsRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetNewsRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetNewsRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetNewsRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetNewsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetNewsRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetNewsRequest>(), &GetNewsRequest::ByteSizeLong,
            &GetNewsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetNewsRequest, _impl_._cached_size_),
        false,
    },
    &GetNewsRequest::kDescriptorMethods,
    &descriptor_table_search_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetNewsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> GetNewsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GetNewsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated int32 docIds = 1;
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetNewsRequest, _impl_.docids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int32 docIds = 1;
    {PROTOBUF_FIELD_OFFSET(GetNewsRequest, _impl_.docids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void GetNewsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GetNewsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.docids_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetNewsRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetNewsRequest& this_ = static_cast<const GetNewsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetNewsRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetNewsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:GetNewsRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated int32 docIds = 1;
          {
            int byte_size = this_._impl_._docids_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt32Packed(
                  1, this_._internal_docids(), byte_size, target);
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:GetNewsRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetNewsRequest::ByteSizeLong(const MessageLite& base) {
          const GetNewsRequest& this_ = static_cast<const GetNewsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetNewsRequest::ByteSizeLong() const {
          const GetNewsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:GetNewsRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated int32 docIds = 1;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
                      this_._internal_docids(), 1,
                      this_._impl_._docids_cached_byte_size_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetNewsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetNewsRequest*>(&to_msg);
  auto& from = static_cast<const GetNewsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GetNewsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_docids()->MergeFrom(from._internal_docids());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetNewsRequest::CopyFrom(const GetNewsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetNewsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetNewsRequest::InternalSwap(GetNewsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.docids_.InternalSwap(&other->_impl_.docids_);
}

::google::protobuf::Metadata GetNewsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetNewsResponse::_Internal {
 public:
};

GetNewsResponse::GetNewsResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GetNewsResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetNewsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::GetNewsResponse& from_msg)
      : news_{visibility, arena, from.news_},
        _cached_size_{0} {}

GetNewsResponse::GetNewsResponse(
    ::google::protobuf::Arena* arena,
    const GetNewsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetNewsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:GetNewsResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetNewsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : news_{visibility, arena},
        _cached_size_{0} {}

inline void GetNewsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetNewsResponse::~GetNewsResponse() {
  // @@protoc_insertion_point(destructor:GetNewsResponse)
  SharedDtor(*this);
}
inline void GetNewsResponse::SharedDtor(MessageLite& self) {
  GetNewsResponse& this_ = static_cast<GetNewsResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GetNewsResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetNewsResponse(arena);
}
constexpr auto GetNewsResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetNewsResponse, _impl_.news_) +
          decltype(GetNewsResponse::_impl_.news_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetNewsResponse), alignof(GetNewsResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetNewsResponse::PlacementNew_,
                                 sizeof(GetNewsResponse),
                                 alignof(GetNewsResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetNewsResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetNewsResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetNewsResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetNewsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetNewsResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetNewsResponse>(), &GetNewsResponse::ByteSizeLong,
            &GetNewsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetNewsResponse, _impl_._cached_size_),
        false,
    },
    &GetNewsResponse::kDescriptorMethods,
    &descriptor_table_search_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetNewsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 28, 2> GetNewsResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GetNewsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string news = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetNewsResponse, _impl_.news_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string news = 1;
    {PROTOBUF_FIELD_OFFSET(GetNewsResponse, _impl_.news_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\17\4\0\0\0\0\0\0"
    "GetNewsResponse"
    "news"
  }},
};

PROTOBUF_NOINLINE void GetNewsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GetNewsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.news_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetNewsResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetNewsResponse& this_ = static_cast<const GetNewsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetNewsResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetNewsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:GetNewsResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string news = 1;
          for (int i = 0, n = this_._internal_news_size(); i < n; ++i) {
            const auto& s = this_._internal_news().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "GetNewsResponse.news");
            target = stream->WriteString(1, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:GetNewsResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetNewsResponse::ByteSizeLong(const MessageLite& base) {
          const GetNewsResponse& this_ = static_cast<const GetNewsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetNewsResponse::ByteSizeLong() const {
          const GetNewsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:GetNewsResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string news = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_news().size());
              for (int i = 0, n = this_._internal_news().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_news().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetNewsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetNewsResponse*>(&to_msg);
  auto& from = static_cast<const GetNewsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GetNewsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_news()->MergeFrom(from._internal_news());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetNewsResponse::CopyFrom(const GetNewsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetNewsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetNewsResponse::InternalSwap(GetNewsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.news_.InternalSwap(&other->_impl_.news_);
}

::google::protobuf::Metadata GetNewsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_search_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
